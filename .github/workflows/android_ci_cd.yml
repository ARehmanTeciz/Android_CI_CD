name: Build and Deploy Android App to Google Play

on:
  push:
    branches:
      - development  # Change this to your actual development branch name
  pull_request:
    branches:
      - development  # Same as above

jobs:
  # Job to run tests and build the React Native app
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [21.5.0]  # Use the Node.js version that your project supports
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install

    - name: Run tests
      run: npm test

  # Job to build Android APK or AAB
  android-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2

    - name: Install dependencies
      run: yarn install

    - name: Prepare keystore
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/my-android-ci-cd.keystore
        ls -l android/app/

    - name: Debug keystore file
      run: |
       if [ -f android/app/my-android-ci-cd.keystore ]; then
        echo "Keystore file exists."
       else
        echo "Keystore file is missing."
        exit 1
       fi

    - name: Set keystore permissions
      run: chmod 600 android/app/my-android-ci-cd.keystore

    - name: Grant execute permissions for gradlew
      run: chmod +x ./gradlew
      working-directory: android

    - name: Clean Build Directory
      run: ./gradlew clean
      working-directory: android

    - name: Build Android
      run: ./gradlew assembleRelease
      working-directory: android

    - name: Debug Build Directory
      run: |
        echo "Contents of the build directory:"
        ls -R android/app/build || echo "Build directory is missing."

    - name: Upload Android Build Artifact (APK or AAB)
      uses: actions/upload-artifact@v3
      with:
        name: android-build
        path: android/app/build/outputs/**/*.apk

  # Job to deploy Android app to Google Play using Fastlane
  android-deploy:
    runs-on: ubuntu-latest
    needs: android-build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Fastlane
      run: |
        sudo gem install fastlane -NV  # Install Fastlane

    - name: Set up Google Play credentials
      run: echo "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}" | base64 -d > google-play-service-account.json

    - name: Deploy to Google Play
      run: |
        fastlane deploy
      env:
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: google-play-service-account.json

  # Job to build and deploy iOS app (optional)
  ios-build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 21.5.0  # Use the Node.js version your project uses

    - name: Install dependencies
      run: yarn install

    - name: Install iOS Pods
      run: |
        cd ios
        pod repo update
        pod install

    - name: Build iOS App
      run: |
        xcodebuild -workspace ios/GoghPay.xcworkspace \
                    -scheme GoghPay \
                    -sdk iphoneos \
                    -configuration Release \
                    archive -archivePath $PWD/build/GoghPay.xcarchive

    - name: Export iOS build
      run: |
        xcodebuild -exportArchive \
                    -archivePath $PWD/build/GoghPay.xcarchive \
                    -exportOptionsPlist ios/exportOptions.plist \
                    -exportPath $PWD/build

    - name: Upload iOS Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ios-build
        path: ios/build/*.ipa  # Adjust path if you need to upload .ipa or .app file

  # Job to deploy iOS app to App Store using Fastlane (optional)
  ios-deploy:
    runs-on: macos-latest
    needs: ios-build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0

    - name: Install Fastlane
      run: gem install fastlane -NV

    - name: Set up Fastlane environment
      run: |
        export FASTLANE_USER=${{ secrets.APP_STORE_CONNECT_API_KEY }}
        export FASTLANE_PASSWORD=${{ secrets.MATCH_PASSWORD }}
        export FASTLANE_DONT_STORE_PASSWORD=1

    - name: Deploy to App Store
      run: fastlane ios deploy
      working-directory: ios

    env:
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
